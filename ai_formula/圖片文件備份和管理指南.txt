===============================================
🛡️ 圖片文件備份和管理指南
===============================================

呢個指南教你點樣管理同備份工具圖片，避免文件遺失。

===============================================
🚨 問題總結
===============================================

之前發生嘅問題：
❌ ai_formula/public/aitools/ 文件夾中嘅圖片檔案遺失
❌ 只剩低 hailuo.jpeg, mem0.jpg, seaweed.png
❌ 其他檔案（4DV.jpg, chat4data.png, freepik.png 等）唔見咗

解決方法：
✅ 從 ai_formula/dist/aitools/ 複製返回去
✅ 使用 Copy-Item 命令恢復所有檔案
✅ 重新構建成功

===============================================
📂 正確的文件夾結構
===============================================

📁 ai_formula/
├── 📁 public/               ← 開發時的靜態文件
│   ├── 📁 aitools/             ← 工具圖片（源文件）
│   │   ├── 📸 hailuo.jpeg
│   │   ├── 📸 mem0.jpg
│   │   ├── 📸 seaweed.png
│   │   ├── 📸 headai.png
│   │   ├── 📸 freepik.png
│   │   ├── 📸 chat4data.png
│   │   ├── 📸 UnstableML.png
│   │   ├── 📸 Higgsfield.png
│   │   ├── 📸 4DV.jpg
│   │   └── 📸 hailuo.png
│   └── 📁 videos/              ← 視頻文件
└── 📁 dist/                 ← 構建後的文件（自動生成）
    └── 📁 aitools/             ← 構建後的圖片（備份位置）

===============================================
🛡️ 文件備份策略
===============================================

### **自動備份命令**

創建一個備份腳本：backup-images.ps1

```powershell
# 備份 aitools 圖片
$sourceDir = "ai_formula\public\aitools"
$backupDir = "ai_formula\backup\aitools-$(Get-Date -Format 'yyyy-MM-dd')"

# 創建備份文件夾
New-Item -ItemType Directory -Path $backupDir -Force

# 複製所有文件
Copy-Item "$sourceDir\*" $backupDir -Force

Write-Host "圖片已備份到: $backupDir"
```

### **恢復命令**

如果文件遺失，使用呢個命令恢復：

```powershell
# 從 dist 文件夾恢復
Copy-Item "ai_formula\dist\aitools\*" "ai_formula\public\aitools\" -Force

# 或從備份恢復（替換日期）
Copy-Item "ai_formula\backup\aitools-2025-01-07\*" "ai_formula\public\aitools\" -Force
```

===============================================
📋 文件清單檢查
===============================================

目前應該有嘅文件：

✅ 4DV.jpg (5.1KB)
✅ chat4data.png (3.0KB)
✅ freepik.png (4.1KB)
✅ hailuo.jpeg (4.6KB)
✅ hailuo.png (2.3KB)
✅ headai.png (4.7KB)
✅ Higgsfield.png (2.8KB)
✅ mem0.jpg (3.6KB)
✅ seaweed.png (2.2KB)
✅ UnstableML.png (2.3KB)

檢查命令：
```powershell
Get-ChildItem "ai_formula\public\aitools" | Select-Object Name, Length
```

===============================================
🔍 定期檢查程序
===============================================

### **每日檢查**
1. 確認 public/aitools/ 文件夾有所有必要檔案
2. 檢查文件大小係咪正常
3. 執行 npm run build 確保無錯誤

### **每週備份**
1. 執行備份腳本
2. 檢查備份文件夾
3. 刪除超過30日嘅舊備份

### **版本控制**
1. 將圖片文件加入 git
2. 定期 commit 圖片變更
3. 使用 .gitignore 排除 dist 文件夾

===============================================
⚠️ 預防措施
===============================================

### **避免文件遺失**

1. **不要直接編輯 dist 文件夾**
   - dist 係構建自動生成嘅
   - 每次 build 都會覆寫

2. **只編輯 public 文件夾**
   - public/aitools/ 係源文件位置
   - 呢度嘅修改會保留

3. **使用版本控制**
   ```bash
   git add ai_formula/public/aitools/
   git commit -m "Add/update tool images"
   ```

4. **定期備份**
   - 設置自動備份腳本
   - 保留多個版本

### **檔案命名規範**

✅ 好的命名：
- toolname.png
- toolname-logo.jpg
- toolname-icon.svg

❌ 避免：
- 空格：tool name.png
- 特殊字符：tool@name.png
- 中文名：工具名稱.png

===============================================
🚀 最佳實踐
===============================================

### **添加新圖片時**

1. **上傳到正確位置**
   ```
   ai_formula/public/aitools/newtool.png
   ```

2. **更新工具數據**
   ```typescript
   // in tools-data.ts
   {
     id: 'newtool',
     imageUrl: '/aitools/newtool.png',
     imageAlt: 'New Tool Logo'
   }
   ```

3. **測試構建**
   ```powershell
   npm run build
   ```

4. **備份新文件**
   ```powershell
   # 執行備份腳本
   ./backup-images.ps1
   ```

### **批量操作**

如果需要批量添加圖片：

1. **準備所有文件**
   - 統一命名格式
   - 檢查文件大小 < 2MB
   - 確保格式支援（png, jpg, svg）

2. **批量複製**
   ```powershell
   Copy-Item "source_folder\*.png" "ai_formula\public\aitools\" -Force
   ```

3. **批量更新配置**
   - 使用腳本自動生成配置
   - 或手動更新 tools-data.ts

===============================================
🆘 緊急恢復指南
===============================================

如果圖片文件又遺失了：

### **步驟1：檢查 dist 文件夾**
```powershell
Get-ChildItem "ai_formula\dist\aitools"
```

### **步驟2：從 dist 恢復**
```powershell
Copy-Item "ai_formula\dist\aitools\*" "ai_formula\public\aitools\" -Force
```

### **步驟3：檢查備份文件夾**
```powershell
Get-ChildItem "ai_formula\backup\" | Sort-Object Name -Descending
```

### **步驟4：從備份恢復（如果有）**
```powershell
Copy-Item "ai_formula\backup\aitools-最新日期\*" "ai_formula\public\aitools\" -Force
```

### **步驟5：確認恢復成功**
```powershell
Get-ChildItem "ai_formula\public\aitools" | Measure-Object
# 應該顯示 10 個或以上的文件
```

### **步驟6：測試構建**
```powershell
npm run build
```

===============================================
📞 聯絡支援
===============================================

如果遇到無法解決嘅問題：

1. 記錄錯誤信息
2. 檢查控制台輸出
3. 確認文件權限
4. 重新執行備份命令

記住：預防勝於治療！定期備份係最好嘅保護。

===============================================
✅ 檢查清單
===============================================

每次添加或修改圖片後：

□ 文件已放到 public/aitools/
□ 文件名符合命名規範
□ 配置已更新到 tools-data.ts
□ npm run build 成功
□ 執行了備份腳本
□ 提交到版本控制（如果需要）

完成所有檢查後，你嘅圖片就安全了！🛡️ 